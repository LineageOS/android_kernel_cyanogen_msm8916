{
  "comments": [
    {
      "key": {
        "uuid": "5f2577a7_be61573c",
        "filename": "drivers/input/misc/ap3426_cm.c",
        "patchSetId": 1
      },
      "lineNbr": 2846,
      "author": {
        "id": 2936
      },
      "writtenOn": "2015-10-26T22:24:09Z",
      "side": 0,
      "message": "Erica: do you remember why we did this originally?",
      "revId": "0a7d1cb54af43dd19d38843fbb5c846cbd133498",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f2577a7_7e9e4f08",
        "filename": "drivers/input/misc/ap3426_cm.c",
        "patchSetId": 1
      },
      "lineNbr": 2846,
      "author": {
        "id": 14090
      },
      "writtenOn": "2015-10-26T22:41:07Z",
      "side": 0,
      "message": "I don\u0027t think it\u0027s working as intended. The IRQ is configured to wake up the system, but when we go to suspend the sensor is actually powered off (see the suspend function). There is no this works as intended without power. On cm-12.1, the wake-up interrupt fires continuously (floating GPIO?) during suspend.\n\nUp until Android 5.0, the proximity sensor was a wake-up sensor. After 5.0, you can offer both a wake-up and non wake-up version of this sensor. The Lettuce Sensor HAL is a version 1.0 Sensor HAL. It\u0027ll take some effort to modernize it to provide both a wake-up and non-wake-up version of the same sensor. \n \nSee here:\nhttps://android.googlesource.com/platform/hardware/libhardware/+/android-4.4.4_r1/include/hardware/sensors.h#367\n\nI\u0027m looking  in to another issue where the prox sensor stops working after resume if it was enabled during suspend.",
      "parentUuid": "5f2577a7_be61573c",
      "revId": "0a7d1cb54af43dd19d38843fbb5c846cbd133498",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    }
  ]
}