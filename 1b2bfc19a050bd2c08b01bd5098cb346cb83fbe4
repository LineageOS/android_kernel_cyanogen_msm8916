{
  "comments": [
    {
      "key": {
        "uuid": "da36d5c6_ef7115e2",
        "filename": "drivers/input/misc/ap3426.c",
        "patchSetId": 5
      },
      "lineNbr": 1967,
      "author": {
        "id": 12941
      },
      "writtenOn": "2015-06-19T04:37:09Z",
      "side": 1,
      "message": "Isn\u0027t ps_data-\u003erels_enable flag supposed to set while the light sensor is on over a suspend \u0026 resume cycle, and in this resume function, it should call ap3426_ls_enable if rels_enable is 1?",
      "revId": "1b2bfc19a050bd2c08b01bd5098cb346cb83fbe4",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da36d5c6_f272deac",
        "filename": "drivers/input/misc/ap3426.c",
        "patchSetId": 5
      },
      "lineNbr": 1967,
      "author": {
        "id": 13108
      },
      "writtenOn": "2015-06-19T06:12:32Z",
      "side": 1,
      "message": "I\u0027ve been starting to test this resume and suspend code\nhoping to understand it better and make sure it\u0027s solid.\n\nI wasn\u0027t sure what rels is an acronym for. Perhaps re-ls.\nIn that case it makes sense and from the usage of \nrels_enable that seems to be it\u0027s intent. Also below\nif ps_opened is set  ap3426_ls_enable() is called which\nseems backward and likely should be ap3426_ps_enable().\n\nDo you know of any reason that we should have symetry\non the ps and als functions?  \n\nThe difference between rels_enable and misc_ls_opened\nisn\u0027t clear from it\u0027s usage in ap3426_ls_enable().\n\nMost strange is flipping the sate of rels_enable\nfrom 1 to 0 independent of enable being 0 or 1. \n\nKevin likely gets the obfuscation award here for\npicking a non-intuitive name rels_enable with semantics\nthat seems equally obscure. Hopefully we can make some\nsense of this, regain symmetry if possible, and make it\ncrystal clear to others in the future.\n\nI\u0027ll continue looking at it and thinking about it.",
      "parentUuid": "da36d5c6_ef7115e2",
      "revId": "1b2bfc19a050bd2c08b01bd5098cb346cb83fbe4",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da36d5c6_92e8c218",
        "filename": "drivers/input/misc/ap3426.c",
        "patchSetId": 5
      },
      "lineNbr": 1967,
      "author": {
        "id": 12941
      },
      "writtenOn": "2015-06-19T06:52:27Z",
      "side": 1,
      "message": "Yes rels_enable is \"re enable ls sensor\" can we (like you suggested) add a flag to init_client(bool disable_interrupt), so we don\u0027t have to worry about re-enabling interrupts in this path and introducing race (eg. during this disable and enable interval, there could be a ps interrupt that\u0027s missed) . in ls_enable the lack of checking is perhaps the original coder assumes the frameworks won\u0027t send ls enable/disable during a suspend.",
      "parentUuid": "da36d5c6_f272deac",
      "revId": "1b2bfc19a050bd2c08b01bd5098cb346cb83fbe4",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da36d5c6_92a0c2a7",
        "filename": "drivers/input/misc/ap3426.c",
        "patchSetId": 5
      },
      "lineNbr": 1967,
      "author": {
        "id": 13108
      },
      "writtenOn": "2015-06-19T09:12:02Z",
      "side": 1,
      "message": "Right. I\u0027ve never seen frameworks trying to do an enable/disable during a suspect/resume period but it\ndoes seems reasonable for the driver to defend itself from\nthis possibility.\n\nAdding a formal argument to ap3426_init_client()\nto indicate of interrupts should be enabled sounds\nlike a reasonable idea. I\u0027ll add it and include it\nin the next upload.\n\nI\u0027ll assume we want to prevent any request to resume\nwhile suspended and see if there are any issues. I doubt it.\nI\u0027ll use variable names that make reading the code clear.\n\nI\u0027ll also make sure the power regulation code is right.\nLin fixed it and it seem like it\u0027s not likely used on\nLettuce or Rendang but I suppose other devices could\nuse it and justify the codes existence. Perhaps should\nbe configurable via the device tree DTS entries.\n\n-piet",
      "parentUuid": "da36d5c6_92e8c218",
      "revId": "1b2bfc19a050bd2c08b01bd5098cb346cb83fbe4",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a25e98e_8ccfcbb2",
        "filename": "drivers/input/misc/ap3426.c",
        "patchSetId": 5
      },
      "lineNbr": 1967,
      "author": {
        "id": 13108
      },
      "writtenOn": "2015-06-23T09:04:54Z",
      "side": 1,
      "message": "I kinda like leaving the init code leaving interrupts\noff by default and explicitly enabling them. Race conditions\nwill be fixed by mutex. Interrupts will be disabled during\nthe suspend. \n\nMight be prudent make sure interrupts aren\u0027t enabled\nwhile we are suspended. Adding ps_data-\u003esuspened and\nmakeing sure we aren\u0027t doing something silly.",
      "parentUuid": "da36d5c6_92e8c218",
      "revId": "1b2bfc19a050bd2c08b01bd5098cb346cb83fbe4",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da36d5c6_32dab679",
        "filename": "drivers/input/misc/ap3426.c",
        "patchSetId": 5
      },
      "lineNbr": 1972,
      "author": {
        "id": 12941
      },
      "writtenOn": "2015-06-19T06:52:27Z",
      "side": 1,
      "message": "ap3426_ls_enable should be outside of this if.",
      "revId": "1b2bfc19a050bd2c08b01bd5098cb346cb83fbe4",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da36d5c6_b23066a0",
        "filename": "drivers/input/misc/ap3426.c",
        "patchSetId": 5
      },
      "lineNbr": 1972,
      "author": {
        "id": 13108
      },
      "writtenOn": "2015-06-19T09:12:02Z",
      "side": 1,
      "message": "Yep. Fixing.",
      "parentUuid": "da36d5c6_32dab679",
      "revId": "1b2bfc19a050bd2c08b01bd5098cb346cb83fbe4",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    }
  ]
}